---------------------------------------------------------------
-- Load modules
---------------------------------------------------------------
local inst = mc.mcGetInstance()
local profile = mc.mcProfileGetName(inst)
local machDir = mc.mcCntlGetMachDir(inst)

-- For ZeroBrane debugging.
package.path = package.path .. ";./ZeroBraneStudio/lualibs/mobdebug/?.lua"

-- For installed profile modules support.
package.path = package.path .. ";./Profiles/" .. profile .. "/Modules/?.lua"
package.path = package.path .. ";./Profiles/" .. profile .. "/Modules/?.luac"
package.path = package.path .. ";./Profiles/" .. profile .. "/Modules/?.mcs"
package.path = package.path .. ";./Profiles/" .. profile .. "/Modules/?.mcc"
package.cpath = package.cpath .. ";./Profiles/" .. profile .. "/Modules/?.dll"

-- For installed global modules support.
package.path = package.path .. ";./Modules/?.lua"
package.path = package.path .. ";./Modules/?.luac"
package.path = package.path .. ";./Modules/?.mcs"
package.path = package.path .. ";./Modules/?.mcc"
package.cpath = package.cpath .. ";./Modules/?.dll"

-- PMC genearated module load code.
package.path = package.path .. ";./Pmc/?.lua"
package.path = package.path .. ";./Pmc/?.luac"

--Do NOT Move this or add anything above it--
rc, mcModulePaths = pcall(require, "mcModulePaths")
if mcModulePaths ~= nil and type(mcModulePaths.loadpaths) == "function" then
	mcModulePaths.loadpaths(machDir, profile)
else
	mc.mcCntlSetLastError(mc.mcGetInstance(), "Macros couldn't find mcModulePaths. Ensure it's placed in the Modules Directory")
end

---------------------------------------------------------------
-- Add Module Requires Below
---------------------------------------------------------------

--Probing module
package.loaded.mcProbe = nil
mcProbe = require "mcProbing"

--AutoTool module
package.loaded.mcAT = nil
mcAT = require "mcAutoTool"

--ErrorCheck module
package.loaded.mcErrorCheck = nil
mcErrorCheck = require "mcErrorCheck"
