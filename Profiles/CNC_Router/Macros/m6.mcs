

function m6()

local inst = mc.mcGetInstance()



local hreg = mc.mcRegGetHandle(inst, 'ESS/Probing_State') -- registry location for Probing_State value. We will use this later to make sure the probe stops when the gcode for probing occurs
local SecondDifference2

function GetRegister(regname)
 local inst = mc.mcGetInstance()
 local hreg = mc.mcRegGetHandle(inst, string.format("iRegs0/%s", regname))
 return mc.mcRegGetValueString(hreg)
end

function WriteRegister(regname, regvalue)
 local inst = mc.mcGetInstance()
 local hreg = mc.mcRegGetHandle(inst, string.format("iRegs0/%s", regname))
 mc.mcRegSetValueString(hreg, tostring(regvalue))
end

-------------------------------------



 local OldSoftLimitZ = 0
------------------------------------------------------------------------------------------------------------
-- registers available in this script
------------------------------------------------------------------------------------------------------------
local mTCPositionX = GetRegister("2025/TCX") -- fixed plate X location
local mTCPositionY = GetRegister("2025/TCY") -- fixed plate Y location
local MTCZHeight = GetRegister("2025/TCZ") -- mtc z heightr to move to after going to the location
local FixedPlateTouchZ = GetRegister("2025/FixedPlateTouchZ")
local LastFixedPlateTouchZ = GetRegister("2025/LastFixedPlateTouchZ") -- var to store first touch in after m6.
local FixedPlate_X = GetRegister("2025/XPlate") -- fixed plate X location
local FixedPlate_Y = GetRegister("2025/YPlate") -- fixed plate Y location
local FirstTouchSpeed = GetRegister("2025/FirstTouchSpeed") -- speed in inches per minute to probe for finding the surface before going slower
local SecondTouchSpeed = GetRegister("2025/SecondTouchSpeed") -- slower speed to touch at
local TouchRetractHeight = GetRegister("2025/TouchRetractHeight") -- how much to move up before touching slower
local moveToPlateDistance = GetRegister("2025/MoveToPlateDistance") -- how much to move up before touching slower
local ZClearance = GetRegister("2025/ZClearance")
--switch the distance input for moving the z to a negative to move in the correct direction
moveToPlateDistance = - tonumber(moveToPlateDistance)
local probingSearchDistance = GetRegister("2025/ProbingSearchDistance") -- how much to move up before touching slower
--switch the distance input for probing to a negative to move in the correct direction
probingSearchDistance = -probingSearchDistance

local IgnoreM6 = GetRegister("2025/IgnoreM6")
IgnoreM6 = tonumber(IgnoreM6)

-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
 
-----------------------------------------------------------------------------------------------------------------
-- m6 functions
-----------------------------------------------------------------------------------------------------------------

 
 local function GoToMTCLocation()
	mc.mcCntlSetLastError(inst, "Moving to the Tool Change Location")
	mc.mcCntlGcodeExecuteWait(inst, 'G90 G53 X'.. mTCPositionX .. 'Y' .. mTCPositionY)
end

local function GoToPermPlate()
    mc.mcCntlSetLastError(inst, "Moving to the Fixed Plate Location")
	mc.mcCntlGcodeExecuteWait(inst, 'G90 G53 X'.. FixedPlate_X .. 'Y' .. FixedPlate_Y .. 'f300')
end

local function SetAxisPosition(axis, AxisPos)
	 mc.mcAxisSetPos(inst, axis, AxisPos)	 
end


local function GetAxisPosition(axis)
	 return mc.mcAxisGetMachinePos(inst, axis)
end

local function GetSoftLimitForAxis(axis)
	local inst = mc.mcGetInstance()
	local result, rc = mc.mcSoftLimitGetState(inst, mc.Z_AXIS)
	return result
end


local function SetSoftLimits(axis, ison)
	local inst = mc.mcGetInstance()
	local rc = mc.mcSoftLimitSetState(inst, axis, ison)
	return rc
end

-----------------------------------------


 -----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------


-- m6 starts and we need to know where we are as well as pull in the known difference in height between the current tool 
-- and the second touch plate. 
 
  currentTool = mc.mcToolGetCurrent(inst)
  selectedTool = mc.mcToolGetSelected(inst)
   mc.mcCntlSetLastError(inst, "Starting M6")
  local posmode = mc.mcCntlGetPoundVar(inst, mc.SV_MOD_GROUP_3) --get the current mode so we can return to it when macro ends
  local feedRate = mc.mcCntlGetPoundVar(inst, 2134)
   mc.mcCntlSetLastError(inst, "Starting M6 -2")
----------------------------------------------------------------------------------------------------------------- 
  --Get positions before moving to do tool change
-----------------------------------------------------------------------------------------------------------------  
 valX, rc = mc.mcAxisGetMachinePos(inst, mc.X_AXIS) --Get the position of the X axis in Machine Position
 valY, rc = mc.mcAxisGetMachinePos(inst, mc.Y_AXIS) --Get the position of the Y axis in Machine Position
 valZ, rc = mc.mcAxisGetPos(inst, mc.Z_AXIS) --Get the position of the Z axis in offset, not machine
 
-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------
-- check if new tool is the same as the old and leave if it is. Move on to the rest of the tool change if not
-----------------------------------------------------------------------------------------------------------------
 

 if selectedTool == currentTool then
   mc.mcCntlSetLastError(inst, "Current tool == Selected tool so there is nothing to do")
  return
 else
  
  --if (IgnoreM6) then
	-- mc.mcCntlSetLastError(inst,  "IgnoreM6 Set. Returning")
	-- return
  --end
  
  OldSoftLimitZ = GetSoftLimitForAxis(mc.Z_AXIS)
  if (OldSoftLimitZ) then
	SetSoftLimits(mc.Z_AXIS, mc.MC_OFF) -- soft limits turned off
  end
  
  mc.mcCntlGcodeExecute(inst, "G90 G53 G0 Z0.0");--Move the Z axis all the way up
  GoToMTCLocation() -- This moves to the tool change location
  MTCZHeight = math.abs(MTCZHeight)
  mc.mcCntlGcodeExecuteWait(inst, "G90 G53 G0 Z-" .. MTCZHeight);--Move the Z axis to change height  
  
  mc.mcCntlSetLastError(inst, "Change to tool " .. tostring(selectedTool) .. " and press start to continue") --Message at beginning of tool change
  mc.mcCntlToolChangeManual(inst, true) --This will pause the tool change here and wait for a press of cycle start to continue
  mc.mcCntlGcodeExecuteWait(inst, "G90 G0 Z0.0");--Move the Z axis all the way up  
  
  
  GoToPermPlate() 
  moveToPlateDistance = math.abs(moveToPlateDistance)
  mc.mcCntlSetLastError(inst, "G53 G0 Z-" .. moveToPlateDistance)
  mc.mcCntlGcodeExecute(inst, "G53 G0 Z-" .. moveToPlateDistance)--Moves the z axis down input distance

 -----------------------------------------------------------------------------------------------------------------
-- Start the probing for Z first move
-----------------------------------------------------------------------------------------------------------------
   mc.mcCntlSetLastError(inst,'G90 G31 Z'..probingSearchDistance .. 'F' .. FirstTouchSpeed)
   mc.mcCntlGcodeExecuteWait(inst,'G90 G31 Z'..probingSearchDistance .. 'F' .. FirstTouchSpeed)
   if mc.mcRegGetValue(hreg) == -1 then
	wx.wxMessageBox('No probe strike. Aborting the rest of the routine')
	return
   end
   
   
   -- Removed G91 as it's an error with G53
   mc.mcCntlSetLastError(inst, 'G90 G53 Z'.. GetAxisPosition(mc.Z_AXIS) + TouchRetractHeight) -- retract and probe slower
   mc.mcCntlGcodeExecuteWait(inst, 'G90 G53 Z'.. GetAxisPosition(mc.Z_AXIS) + TouchRetractHeight) -- retract and probe slower
-----------------------------------------------------------------------------------------------------------------   
-- Second probing with slower speed   
-----------------------------------------------------------------------------------------------------------------
   mc.mcCntlGcodeExecuteWait(inst,'G90 G31 Z'..probingSearchDistance .. 'F' .. SecondTouchSpeed)
   if mc.mcRegGetValue(hreg) == -1 then
	wx.wxMessageBox('No probe strike. Aborting the rest of the routine')
	return
   end
-----------------------------------------------------------------------------------------------------------------   

-----------------------------------------------------------------------------------------------------------------   
   
   plateTouchedPos = mc.mcAxisGetPos(inst, mc.Z_AXIS)   -- store the z measurement of current probe touch
   mc.mcCntlSetLastError(inst, 'last tool position was ' .. FixedPlateTouchZ .. " the new position is " .. plateTouchedPos)
-----------------------------------------------------------------------------------------------------------------      
-- set current z pos as the replacement of the first tool 
-----------------------------------------------------------------------------------------------------------------   
   local convertFixedz = tonumber(FixedPlateTouchZ)
   ZAxisPos = convertFixedz
   SetAxisPosition(mc.Z_AXIS, ZAxisPos)
   
  mc.mcCntlGcodeExecuteWait(inst, 'G91 Z" .. ZClearance .. " F25') -- move away from probe surface using incremental mode.   
   
-----------------------------------------------------------------------------------------------------------------   
-- store
-----------------------------------------------------------------------------------------------------------------   
  WriteRegister("2025/LastFixedPlateTouchZ", plateTouchedPos) -- before it is overwritten, write last pos to this var
  WriteRegister("2025/FixedPlateTouchZ", plateTouchedPos)    -- store new pos aND OVERWRITE LAST. USED IN LATER M6 CALLS
-----------------------------------------------------------------------------------------------------------------   

-----------------------------------------------------------------------------------------------------------------   
  mc.mcCntlSetLastError(inst, "Move to Z0 Machine Coordinates")
  mc.mcCntlGcodeExecute(inst, "G90 G53 G1 Z0 F80") --Retract back to Z home
  
-----------------------------------------------------------------------------------------------------------------   
-----------------------------------------------------------------------------------------------------------------   

  local MyChoice = wx.wxMessageBox("Remove Probe Clip","Click OK to continue", 16)  -- brings up a dialog box and waits for a selection to proceed
  
  if (MyChoice == 16) then  --16 is cancel
		rc = mc.mcCntlSetLastError(inst, 'probing.')  
  elseif (MyChoice == 4) then

	
    
	SetSoftLimits(mc.Z_AXIS, OldSoftLimitZ) -- restore soft limits
	mc.mcCntlGcodeExecute(inst, "G90 G53 G0 X" .. tonumber(valX) .. "Y" .. tonumber(valY)) --Move back to X & Y initial location
	mc.mcCntlGcodeExecute(inst, "G90 G0 Z" .. tonumber(valZ)) --Move back to Z initial location. might be a problem for starting tool. double check.
	mc.mcToolSetCurrent(inst, selectedTool)
  end
 mc.mcCntlSetPoundVar(inst, mc.SV_MOD_GROUP_3, posmode)
 mc.mcCntlGetPoundVar(inst, 2134, feedRate);
 end -- end of check if new tool is the same as the old


end -- end m6 function


if (mc.mcInEditor() == 1) then
 m6()
end

