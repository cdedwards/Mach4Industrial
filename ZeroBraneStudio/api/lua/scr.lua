return {
	-- scr library
	scr = {
		type = "lib",
		description = "The Mach4GUI screen API library.",
		childs = {
			--////@begin values
			SERROR_NOERROR = { type = "value" },
			SERROR_API_INIT = { type = "value" },
			SERROR_CONTROL_NOT_FOUND = { type = "value" },
			SERROR_PROPERTY_NOT_FOUND = { type = "value" },
			SERROR_PAGE_NOT_FOUND = { type = "value" },
			SERROR_INVALID_PARAM = { type = "value" },
			SERROR_FUNCTION_NOT_FOUND = { type = "value" },
			SERROR_IPC_NOT_READY = { type = "value" },
			CTYPE_NONE = { type = "value" },
			CTYPE_SCREEN = { type = "value" },
			CTYPE_PAGE = { type = "value" },
			CTYPE_GROUP = { type = "value" },
			CTYPE_NOTEBOOK = { type = "value" },
			CTYPE_NOTEBOOK_PAGE = { type = "value" },
			CTYPE_BUTTON = { type = "value" },
			CTYPE_DRO = { type = "value" },
			CTYPE_LED = { type = "value" },
			CTYPE_TOOLPATH = { type = "value" },
			CTYPE_GCODE_LIST = { type = "value" },
			CTYPE_BITMAP_BUTTON = { type = "value" },
			CTYPE_TOGGLE_BUTTON = { type = "value" },
			CTYPE_STATIC_TEXT = { type = "value" },
			CTYPE_STATIC_BITMAP = { type = "value" },
			CTYPE_SLIDER = { type = "value" },
			CTYPE_GAUGE = { type = "value" },
			CTYPE_MDI = { type = "value" },
			CTYPE_LINE = { type = "value" },
			CTYPE_LUA_PANEL = { type = "value" },
			CTYPE_TEXT_BOX = { type = "value" },
			CTYPE_PLUGIN_PANEL = { type = "value" },
			CTYPE_ANIMATION = { type = "value" },
			CTYPE_TOOL_OFFSETS = { type = "value" },
			CTYPE_WORK_OFFSETS = { type = "value" },
			CTYPE_GCODE_EDITOR = { type = "value" },
			CTYPE_ANGULAR_METER = { type = "value" },
			CTYPE_LINEAR_METER = { type = "value" },
			CTYPE_VIDEO = { type = "value" },
			CTYPE_TIMER = { type = "value" },
			CTYPE_LIST = { type = "value" },
			CTYPE_GENERIC = { type = "value" },
			CTYPE_CONTAINER = { type = "value" },
			EDITOR_NONE = { type = "value" },
			EDITOR_UNDO = { type = "value" },
			EDITOR_REDO = { type = "value" },
			EDITOR_FIND = { type = "value" },
			EDITOR_REPLACE = { type = "value" },
			VIDEO_CLEAR = { type = "value" },
			VIDEO_PAUSE = { type = "value" },
			VIDEO_PLAY = { type = "value" },
			VIDEO_RETICLE_ON = { type = "value" },
			VIDEO_RETICLE_OFF = { type = "value" },
			VIDEO_RETICLE_TOGGLE = { type = "value" },
			VIDEO_ROTATE_CW = { type = "value" },
			VIDEO_ROTATE_CCW = { type = "value" },
			VIDEO_FLIP_V = { type = "value" },
			VIDEO_FLIP_H = { type = "value" },
			VISION_NONE = { type = "value" },
			VISION_CIRCLE = { type = "value" },
			VISION_LINE = { type = "value" },
			VISION_QRCODE = { type = "value" },
			VISION_CIRCLE_MINRAD = { type = "value" },
			VISION_CIRCLE_MAXRAD = { type = "value" },
			VISION_CIRCLE_BLIR = { type = "value" },
			VISION_CIRCLE_PARAM1 = { type = "value" },
			VISION_CIRCLE_PARAM2 = { type = "value" },
			--////@end values
			--////@begin functions
			ButtonClick = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			ButtonDown = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			ButtonUp = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			ClearStatusHistory = {
				type = "function",
				args = "()",
				returns = "(rc: number)",
			},
			DoCutRecovery = {
				type = "function",
				args = "(inst: number)",
				returns = "(rc: number)",
			},
			DoFunctionCode = {
				type = "function",
				args = "(code: number)",
				returns = "(rc: number)",
			},
			DoFunctionCodeInst = {
				type = "function",
				args = "(inst: number, code: number)",
				returns = "(rc: number)",
			},
			DoFunctionName = {
				type = "function",
				args = "(funcName: string)",
				returns = "(rc: number)",
			},
			DoFunctionNameInst = {
				type = "function",
				args = "(inst: number, funcName: string)",
				returns = "(rc: number)",
			},
			DroRead = {
				type = "function",
				args = "(inst: number, code: number)",
				returns = "(value: number, rc: number)",
			},
			DroWrite = {
				type = "function",
				args = "(inst: number, code: number, value: number)",
				returns = "(rc: number)",
			},
			EditorFileClose = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			EditorFileLoad = {
				type = "function",
				args = "(ctrlName: string, filePath: string)",
				returns = "(rc: number)",
			},
			EditorFileNew = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			EditorFileOpen = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			EditorFileSave = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			EditorFileSaveAs = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			EditorGetFileName = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(buf: string, rc: number)",
			},
			EditorLoadCurrent = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			EditorMenuBarCommand = {
				type = "function",
				args = "(ctrlName: string, command: number)",
				returns = "(rc: number)",
			},
			EditorSaveCurrent = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			EditorShowAuiBar = {
				type = "function",
				args = "(ctrlName: string, show: number)",
				returns = "(rc: number)",
			},
			EnableButtonHover = {
				type = "function",
				args = "(enable: number)",
				returns = "(rc: number)",
			},
			EnumCtrlChildren = {
				type = "function",
				args = "(ctrlName: string, ctrlNameStart: string)",
				returns = "(buf: string, rc: number)",
			},
			ExecMdi = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(rc: number)",
			},
			ExecMdiInst = {
				type = "function",
				args = "(inst: number, ctrlName: string)",
				returns = "(rc: number)",
			},
			Exit = {
				type = "function",
				args = "(force: boolean)",
				returns = "(rc: number)",
			},
			ExportStrings = {
				type = "function",
				args = "()",
				returns = "(rc: number)",
			},
			ExportStringsEx = {
				type = "function",
				args = "(fileName: string)",
				returns = "(rc: number)",
			},
			GetActiveWindowText = {
				type = "function",
				args = "()",
				returns = "(buf: string, rc: number)",
			},
			GetCtrlParent = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(buf: string, rc: number)",
			},
			GetCtrlType = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(type: number, rc: number)",
			},
			GetCurrentPage = {
				type = "function",
				args = "()",
				returns = "(page: number, rc: number)",
			},
			GetHistory = {
				type = "function",
				args = "()",
				returns = "(buf: string, rc: number)",
			},
			GetInstanceCount = {
				type = "function",
				args = "()",
				returns = "(count: number, rc: number)",
			},
			GetLanguageId = {
				type = "function",
				args = "()",
				returns = "(id: number, rc: number)",
			},
			GetLanguageName = {
				type = "function",
				args = "()",
				returns = "(buf: string, rc: number)",
			},
			GetProperty = {
				type = "function",
				args = "(ctrlName: string, propName: string)",
				returns = "(buf: string, rc: number)",
			},
			GetScreenName = {
				type = "function",
				args = "()",
				returns = "(buf: string, rc: number)",
			},
			GetStatusHistory = {
				type = "function",
				args = "()",
				returns = "(buf: string, rc: number)",
			},
			IsControl = {
				type = "function",
				args = "(ctrlName: string)",
				returns = "(val: boolean, rc: number)",
			},
			IsLoaded = {
				type = "function",
				args = "()",
				returns = "(val: boolean, rc: number)",
			},
			IsOpLock = {
				type = "function",
				args = "()",
				returns = "(val: boolean, rc: number)",
			},
			IsProperty = {
				type = "function",
				args = "(ctrlName: string, propName: string)",
				returns = "(val: boolean, rc: number)",
			},
			RefreshScreen = {
				type = "function",
				args = "(ms: number)",
				returns = "(rc: number)",
			},
			RestartTimer = {
				type = "function",
				args = "(timerNum: number)",
				returns = "(rc: number)",
			},
			SetProperty = {
				type = "function",
				args = "(ctrlName: string, propName: string, value: string)",
				returns = "(rc: number)",
			},
			ShowMenu = {
				type = "function",
				args = "(show: boolean)",
				returns = "(rc: number)",
			},
			ShowPage = {
				type = "function",
				args = "(pageName: string)",
				returns = "(rc: number)",
			},
			StartTimer = {
				type = "function",
				args = "(timerNum: number, ms: number, oneShot: number)",
				returns = "(rc: number)",
			},
			StopTimer = {
				type = "function",
				args = "(timerNum: number)",
				returns = "(rc: number)",
			},
			VisionSetMode = {
				type = "function",
				args = "(ctrlName: string, command: number)",
				returns = "(rc: number)",
			},
			Zdummy = {
				type = "function",
				args = "(dumb: boolean)",
				returns = "(rc: number)",
			},
			--////@end functions
		},
	},
}

